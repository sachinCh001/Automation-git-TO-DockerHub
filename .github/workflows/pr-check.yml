# This is a basic workflow to help you get started with Actions

name: ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
    paths:
      - 'git-PR-check/*'
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Login to Docker Hub 
      - name: Login to Docker Hub 
        run: echo ${{secrets.DOCKERHUB_TOKEN}} | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

      # Build and Push
      - name: Build and Push
        run: |
          echo "Start Building Image"
          docker build -t jira:latest -f git-PR-check/Dockerfile # This is a basic workflow to help you get started with Actions

name: ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
    paths:
      - 'git-PR-check/*'
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Login to Docker Hub 
      - name: Login to Docker Hub 
        run: echo ${{secrets.DOCKERHUB_TOKEN}} | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

      # Build and Push
      - name: Build and Push
        run: |
          echo "Start Building Image"
          docker build -t jira:latest -f git-PR-check/Dockerfile jira
          docker tag jira:latest skc1998/jira:v.0.0.1
          docker push skc1998/jira:v.0.0.1
        env:
          DOCKER_CLI_AGGREGATE: 1
          DOCKER_BUILDKIT: 1

          docker tag jira:latest skc1998/jira:v.0.0.1
          docker push skc1998/jira:v.0.0.1
        env:
          DOCKER_CLI_AGGREGATE: 1
          DOCKER_BUILDKIT: 1
